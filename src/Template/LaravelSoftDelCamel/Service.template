namespace App\Services\Admin;

use App\Models\{upTableName};
use Exception;
use App\Utils\GlobalCode;
use App\Utils\GlobalMsg;

class {upTableName}Service
{

    public static function getList(array $where = [], int $page = 0, int $page_size = 0)
    {
        ${lcTableName} = new {upTableName}();

        {ifParamString}
        $count = ${lcTableName}->count();

        if ($page > 0 && $page_size >0) {
           ${lcTableName} = ${lcTableName}->forPage($page, $page_size);
        }

        $list = ${lcTableName}->orderBy('id', 'desc')->get()->toArray();

        return ['count' => $count, 'list' => $list];
    }

    public static function getAll(array $where = [])
    {
            ${lcTableName} = new {upTableName}();

            {ifParamString}
            return ${lcTableName}->orderBy('id', 'desc')->get()->toArray();
    }

    public static function getOne(int $id = 0)
    {
             ${lcTableName} = {upTableName}::where('id', $id)->first();
             if (${lcTableName} == null) {
                 throw new Exception(GlobalMsg::GET_HAS_NO);
             }
             return ${lcTableName};
    }

    public static function add(array $where = [])
    {

            ${lcTableName} = new {upTableName}();
            if (!empty($where['id'])) {
                throw new Exception(GlobalMsg::ADD_ID);
            }
            {paramString}

            $res = ${lcTableName}->save();
            if($res == false){
                throw new Exception(GlobalMsg::SAVE_FAIL);
            }
            return $res;
    }

    public static function save(array $where = [])
    {
            if (empty($where['id'])) {
                throw new Exception(GlobalMsg::SAVE_NO_ID);
            }
            ${lcTableName} = {upTableName}::where('id', $where['id'])->first();
            if(${lcTableName} == null){
                throw new Exception(GlobalMsg::SAVE_HAS_NO);
            }

            {paramString}

            $res = ${lcTableName}->save();
            if($res == false){
                throw new Exception(GlobalMsg::SAVE_FAIL);
            }
            return $res;
    }

    public static function delete(int $id = 0)
    {
        ${lcTableName} = {upTableName}::where('id', $id)->first();
        if (${lcTableName} == null) {
            throw new Exception(GlobalMsg::DEL_HAS_NO);
        }
         $res = ${lcTableName}->save();
         if($res == false){
            throw new Exception(GlobalMsg::SAVE_FAIL);
         }
         return $res;
    }
}
